version: '3'

services:
  app:
    container_name: graasp-core
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # [Choice] Node.js version: 14, 12, 10
        VARIANT: 16
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: 1000
        USER_GID: 1000
    environment:
      HOSTNAME: localhost
      PG_CONNECTION_URI: "postgresql://docker:docker@localhost:5432/docker"
      FILE_STORAGE_ROOT_PATH: "/tmp/graasp-file-item-storage"
      DB_NAME: docker
      DB_USERNAME: docker
      DB_PASSWORD: docker
      DB_HOST: db

    volumes:
      - ..:/workspace:cached
      - ../tmp:/tmp/graasp-file-item-storage
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
    ports:
      - 3000:3000

  db:
    container_name: graasp-postgres
    image: postgres:15
    restart: on-failure
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: docker
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward MongoDB locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  redis:
    container_name: graasp-redis
    image: redis
    restart: on-failure

  etherpad:
    container_name: graasp-etherpad
    image: etherpad/etherpad
    # start the server with dev API key
    # https://hub.docker.com/r/etherpad/etherpad/dockerfile
    # https://github.com/ether/etherpad-lite/issues/3849
    volumes:
      # bind copy the dev API key
      - ./etherpad/devApiKey.txt:/opt/etherpad-lite/APIKEY.txt
    ports:
      - 9001:9001
    environment:
      - DB_TYPE=postgres
      - DB_HOST=etherpad-db
      - DB_PORT=5432
      - DB_NAME=etherpad
      - DB_USER=etherpad
      - DB_PASS=etherpad
      # allow only group pads
      #Â - REQUIRE_SESSION=true
      # only API can create pads
      - EDIT_ONLY=true
    # restart the container until db has created tables
    restart: on-failure
    depends_on:
      - db

  etherpad-db:
    container_name: graasp-postgres-etherpad
    image: postgres:15
    restart: on-failure
    ports:
      - 5433:5432
    volumes:
      - postgres-data-etherpad:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: etherpad
      POSTGRES_USER: etherpad
      POSTGRES_PASSWORD: etherpad

  # Localstack is used to test aws services locally
  localstack:
    container_name: graasp-localstack
    image: localstack/localstack
    volumes:
      - ${TMPDIR}/localstack:/tmp/graasp-localstack
      - ./localstack:/docker-entrypoint-initaws.d
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
    ports:
      - 4566-4583:4566-4583

  # necessary for graasp-embedded-link-item
  iframely:
    container_name: graasp-iframely
    image: graasp/iframely:latest
    environment:
      NODE_ENV: staging
    ports:
      - 8061:8061

volumes:
  postgres-data:
  postgres-data-etherpad:
