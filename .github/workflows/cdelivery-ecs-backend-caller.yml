name: Deploy to staging environment

# Controls when the action will run.
on:
  # Triggers the workflow on repository-dispatch event
  repository_dispatch:
    types: [staging-deployment]

# This workflow is made up of one job that calls the reusable workflow in graasp-deploy
jobs:
  graasp-deploy-ecs-backend-workflow:
    # repository name
    name: Graasp
    uses: graasp/graasp-deploy/.github/workflows/cdelivery-ecs-backend.yml@v1

    # abort previous deployment if a newer one is in progress
    concurrency:
      group: deploy-staging
      cancel-in-progress: true

    # ecs-task-definition with template file.
    with:
      database-logs: false
      ecs-task-definition: '.aws/graasp-stage.json'
      etherpad-cookie-domain: ${{ vars.ETHERPAD_COOKIE_DOMAIN_STAGE }}
      etherpad-url: ${{ vars.ETHERPAD_URL_STAGE }}
      h5p-file-storage-type: ${{ vars.H5P_FILE_STORAGE_TYPE }}
      log-level: debug
      node-env-iframely: production
      node-env: production
      roarr-log: false
      s3-file-item-plugin: true
      subscriptions-plugin: true
      tag: ${{ github.event.client_payload.tag }}
      token-based-auth: true
      websockets-plugin: true

    # required secrets
    secrets:
      analyzer-client-host: ${{ secrets.ANALYZER_CLIENT_HOST_STAGE }}
      apps-jwt-secret: ${{ secrets.APPS_JWT_SECRET_STAGE }}
      apps-publisher-id: ${{ secrets.APPS_PUBLISHER_ID }}
      auth-client-host: ${{ secrets.AUTH_CLIENT_HOST_STAGE }}
      auth-token-expiration-in-minutes: ${{ secrets.AUTH_TOKEN_EXPIRATION_IN_MINUTES }}
      auth-token-jwt-secret: ${{ secrets.AUTH_TOKEN_JWT_SECRET_STAGE }}
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGE }}
      aws-region: ${{ secrets.AWS_REGION_STAGE }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGE }}
      builder-client-host: ${{ secrets.BUILDER_CLIENT_HOST_STAGE }}
      client-host: ${{ secrets.CLIENT_HOST_STAGE }}
      container-image-classifier: ${{ secrets.CONTAINER_IMAGE_CLASSIFIER }}
      container-image-iframely: ${{ secrets.CONTAINER_IMAGE_IFRAMELY }}
      container-name-classifier: ${{ secrets.CONTAINER_NAME_CLASSIFIER }}
      container-name-graasp: ${{ secrets.CONTAINER_NAME_GRAASP_STAGE }}
      container-name-iframely: ${{ secrets.CONTAINER_NAME_IFRAMELY_STAGE }}
      cookie-domain: ${{ secrets.COOKIE_DOMAIN_STAGE }}
      cors-origin-regex: ${{ secrets.CORS_ORIGIN_REGEX_STAGE }}
      db-host: ${{ secrets.DB_HOST }}
      db-name: ${{ secrets.DB_NAME }}
      db-password: ${{ secrets.DB_PASSWORD }}
      db-read-replica-hosts: ${{ secrets.DB_READ_REPLICA_HOSTS }}
      db-username: ${{ secrets.DB_USERNAME }}
      ecr-repository: ${{ secrets.ECR_REPOSITORY_GRAASP_STAGE }}
      ecs-cluster: ${{ secrets.ECS_CLUSTER_GRAASP_STAGE }}
      ecs-service: ${{ secrets.ECS_SERVICE_GRAASP_STAGE }}
      embedded-link-item-iframely-href-origin: ${{ secrets.EMBEDDED_LINK_ITEM_IFRAMELY_HREF_ORIGIN }}
      etherpad-api-key: ${{ secrets.ETHERPAD_API_KEY_STAGE }}
      explorer-client-host: ${{ secrets.EXPLORER_CLIENT_HOST_STAGE }}
      file-storage-root-path: ${{ secrets.FILE_STORAGE_ROOT_PATH }}
      h5p-content-access-key-id: ${{ secrets.H5P_CONTENT_ACCESS_KEY_ID_STAGE }}
      h5p-content-bucket-name: ${{ secrets.H5P_CONTENT_BUCKET_STAGE }}
      h5p-content-region: ${{ secrets.H5P_CONTENT_REGION_STAGE }}
      h5p-content-secret-access-key-id: ${{ secrets.H5P_CONTENT_SECRET_ACCESS_KEY_STAGE }}
      h5p-path-prefix: ${{ secrets.H5P_PATH_PREFIX_STAGE }}
      hostname: ${{ secrets.HOSTNAME_STAGE}}
      image-classifier-api: ${{ secrets.IMAGE_CLASSIFIER_API }}
      jwt-secret: ${{ secrets.JWT_SECRET_STAGE }}
      mailer-config-from-email: ${{ secrets.MAILER_CONFIG_FROM_EMAIL_STAGE }}
      mailer-config-password: ${{ secrets.MAILER_CONFIG_PASSWORD_STAGE }}
      mailer-config-smtp-host: ${{ secrets.MAILER_CONFIG_SMTP_HOST }}
      mailer-config-username: ${{ secrets.MAILER_CONFIG_USERNAME_STAGE }}
      player-client-host: ${{ secrets.PLAYER_CLIENT_HOST_STAGE }}
      port: ${{ secrets.PORT }}
      public-url: ${{ secrets.PUBLIC_URL }}
      recaptcha-secret-access-key: ${{ secrets.RECAPTCHA_SECRET_ACCESS_KEY }}
      redis-host: ${{ secrets.REDIS_HOST_STAGE }}
      redis-port: ${{ secrets.REDIS_PORT }}
      redis-username: ${{ secrets.REDIS_USERNAME }}
      refresh-token-expiration-in-minutes: ${{ secrets.REFRESH_TOKEN_EXPIRATION_IN_MINUTES }}
      refresh-token-jwt-secret: ${{ secrets.REFRESH_TOKEN_JWT_SECRET_STAGE }}
      s3-file-item-access-key-id: ${{ secrets.S3_FILE_ITEM_ACCESS_KEY_ID_STAGE }}
      s3-file-item-bucket: ${{ secrets.S3_FILE_ITEM_BUCKET_STAGE }}
      s3-file-item-region: ${{ secrets.S3_FILE_ITEM_REGION }}
      s3-file-item-secret-access-key: ${{ secrets.S3_FILE_ITEM_SECRET_ACCESS_KEY_STAGE }}
      secure-session-secret-key: ${{ secrets.SECURE_SESSION_SECRET_KEY_STAGE }}
      sentry-dsn: ${{ secrets.SENTRY_DSN }}
      stripe-default-plan-price-id: ${{ secrets.STRIPE_DEFAULT_PLAN_PRICE_ID }}
      stripe-secret-key: ${{ secrets.STRIPE_SECRET_KEY }}
